@model AgileRap_Process2.Models.Work

@{
    List<SelectListItem> UserDropdownList = ViewBag.UserDropdown;
    List<SelectListItem> StatusDropdownList = ViewBag.StatusDropdown;
    List<SelectListItem> ProviderDropdownList = ViewBag.ProviderDropdownList;
}
@using (Html.BeginForm("Edit", "Works", FormMethod.Post, new { id = "Workform" }))
{
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.IsDelete)
    @Html.HiddenFor(m => m.CreateDate)
    @Html.HiddenFor(m => m.CreateBy)


    <input type="hidden" asp-for="ProviderValue" id="ProviderValue" />
    <input type="hidden" asp-for="AllProviderSelected" id="areAllSelected" />
    <input type="hidden" asp-for="ProvidersSelected" id="ProvidersSelected" />

    <div hidden>

        @Html.EditorFor(m => m.Provider)
        @Html.EditorFor(m => m.WorkLogs)

    </div>

    <tr>
        <td>
            @Html.DisplayFor(m => m.CreateDate)
        </td>
        <td>
            @Html.EditorFor(m => m.Project, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
        </td>
        <td>
            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
        </td>
        <td>
            @Html.EditorFor(m => m.DueDate, new { htmlAttributes = new { @class = "form-control", onchange = "IsChangeDuedate()", @id = "DueDateID" } })
            @* <input class="form-control" asp-for="DueDate"}" /> *@
        </td>
        <td>
            @foreach (var i in UserDropdownList)
            {
                if (Model.CreateBy == int.Parse(i.Value))
                {
                    @Html.DisplayName(i.Text)
                }
            }
        </td>
        <td align ="center">
            <div>
                <select id="select-tops-options" required multiple="multiple" asp-items="ProviderDropdownList">
                </select>
            </div>
            <div id="validation-message" style="color: red; display: none;" >Please select at least one provider</div>
        </td>
        <td>
            @Html.DropDownListFor(m => m.StatusID, StatusDropdownList, new { @class = "form-control", @id = "StatusID" })
        </td>
        <td>
            @Html.EditorFor(m => m.Remark, new { htmlAttributes = new { @class = "form-control" } })
        </td>
        <td>

            @* <a class="btn btn-primary" asp-action="History" asp-controller="Works" asp-route-id="@Model.ID">History</a> *@
            @* @Html.ActionLink("History", "History", "Works", new
                {
                    HistoryID = Model.ID,
                    RequseterFilter = Context.Session.GetString("RequseterFilter"),
                    ProviderFilterValue = Context.Session.GetString("ProviderFilterValue"),
                    ProjectFilter = Context.Session.GetString("ProjectFilter"),
                    StatusFilter = Context.Session.GetString("StatusFilter"),
                    IsChangePage = true

                }, new { @class = "btn btn-warning" }) *@
            <input value="Submit" class="btn btn-success" type="submit" />
            @* <a class="btn btn-danger" asp-action="Index" asp-controller="Works" asp-route-id="@Model.ID">Cancel</a> *@
            @Html.ActionLink("Cancel", "Index", "Works", new
                {
                    RequseterFilter = Context.Session.GetString("RequseterFilter"),
                    ProviderFilterValue = Context.Session.GetString("ProviderFilterValue"),
                    ProjectFilter = Context.Session.GetString("ProjectFilter"),
                    StatusFilter = Context.Session.GetString("StatusFilter"),
                    IsChangePage = true

                }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded",
        () => {
            $('#select-tops-options').multiselect({
                buttonClass: 'form-select',
                nonSelectedText: 'Select Provider',
                buttonContainer: '<div id="select-tops-options-container"></div>',
                selectedClass: 'active multiselect-selected',
                numberDisplayed: 5,
                buttonWidth: '18em',
                includeSelectAllOption: true,
                onSelectAll: function (options) {
                    document.getElementById("areAllSelected").value = true;
                    document.getElementById("ProviderValue").value = "";
                },
                onDeselectAll: function (options) {
                    document.getElementById("areAllSelected").value = false;
                    document.getElementById("ProviderValue").value = "";
                },
                //includeResetOption: true,
                //selectAllName: 'select-all-name',
                onChange: function (option, checked) {
                    /*
                     * Not there yet
                     */
                    if (checked) {
                        document.querySelectorAll(`[value="${$(option[0])[0].value}"]`)[1].ariaChecked = "true";
                        document.querySelectorAll(`[value="${$(option[0])[0].value}"]`)[0].ariaChecked = "true";
                    } else {
                        document.querySelectorAll(`[value="${$(option[0])[0].value}"]`)[1].ariaChecked = "false";
                        document.querySelectorAll(`[value="${$(option[0])[0].value}"]`)[0].ariaChecked = "false";
                    }

                    //$("#select-tops-options").multiselect('deselect', '1');
                    var toppings = $('#select-tops-options option:selected');

                    var selected = [];
                    $(toppings).each(function (index, item) {
                        selected.push([$(this).val()]);
                    });
                    document.getElementById("areAllSelected").value = false;

                    document.getElementById("ProviderValue").value = selected.join(',');
                },
                templates: {
                    button:
                        '<button type="button" class="multiselect dropdown-toggle" ' +
                        'data-bs-toggle="dropdown"><span class="multiselect-selected-text"></span></button>',
                    resetButton: '<div class="multiselect-reset text-center p-2"><button type="button" class="btn btn-sm btn-danger"></button></div>'
                }
            });

            $('#Workform').submit(function () {
                var selectedOptions = $('#select-tops-options option:selected');

                if (selectedOptions.length === 0) {
                    $('#validation-message').show();
                    return false; // ป้องกันแบบฟอร์มไม่ให้ส่ง
                } else {
                    $('#validation-message').hide();
                }
            });
        });
</script>

<script>

    function IsChangeDuedate() {

        var dueDateValue = $("#DueDateID").val();

        if (!dueDateValue) {
            $("#StatusID").val(1);
        }
    }

</script>